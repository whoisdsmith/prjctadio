import os
import shutil
from pydub import AudioSegment
from pydub.silence import detect_nonsilent

# Configuration
source_directory = "E:\\Instrumental Library"
destination_directory = os.path.join(source_directory, "AudioSilence")
silence_threshold = -50  # Silence threshold in dB
min_silence_length = 1000  # Minimum length of silence at the beginning of the track in milliseconds

if not os.path.exists(destination_directory):
    os.makedirs(destination_directory)

def find_files_with_silence(src_dir):
    silence_files = []
    
    # Walk through all files in the source directory
    for root, dirs, files in os.walk(src_dir):
        for file in files:
            if file.lower().endswith('.mp3'):
                try:
                    # Load the audio file
                    audio_path = os.path.join(root, file)
                    audio = AudioSegment.from_file(audio_path, format="mp3")
                    
                    # Check for non-silent parts
                    nonsilent_parts = detect_nonsilent(audio, min_silence_len=min_silence_length, silence_thresh=silence_threshold)
                    # If the first non-silent part starts after 0, there's silence at the beginning
                    if nonsilent_parts and nonsilent_parts[0][0] > 0:
                        silence_files.append(audio_path)
                except Exception as e:
                    print(f"Error processing {file}: {e}")

    return silence_files

def move_files(files, dst_dir):
    for file in files:
        try:
            # Define the new path for the file
            dst_path = os.path.join(dst_dir, os.path.basename(file))
            # Move the file
            shutil.move(file, dst_path)
            print(f"Moved: {file} -> {dst_path}")
        except Exception as e:
            print(f"Error moving {file}: {e}")

# Find all files with silence at the beginning
files_with_silence = find_files_with_silence(source_directory)

# Move the detected files to the new folder
move_files(files_with_silence, destination_directory)

print("Scan and move complete.")